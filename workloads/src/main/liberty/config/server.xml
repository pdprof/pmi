<server description="db-workload">

	<!-- Enable features -->
	<featureManager>
		<feature>cdi-2.0</feature>
		<feature>concurrent-1.0</feature>
		<feature>jaxrs-2.1</feature>
		<feature>jdbc-4.2</feature>
		<feature>jndi-1.0</feature>
		<feature>localConnector-1.0</feature>
		<feature>monitor-1.0</feature>
		<feature>restConnector-2.0</feature>
		<feature>servlet-4.0</feature>
	</featureManager>

	<!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

	<!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
		 encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
		 Then uncomment the keyStore element. -->
	<keyStore password="{xor}Lz4sLChvLTs="/> 

	<!-- For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
		 basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
		 generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
		 Then uncomment the user element. -->
	<basicRegistry id="basic" realm="BasicRealm">
		<user name="m5radmin" password="{xor}Lz4sLChvLTs="/>
	</basicRegistry>

	<!-- Defining user or group who can access to monitoring facility. -->
	<administrator-role>
		<user>m5radmin</user>
	</administrator-role>
	<!-- Enabling Traditional PMI way of reporting. You can restrict components
		 to monitor with filter attribute. -->
	<!-- monitor enableTraditionalPMI="true"/ -->

	<!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
	<httpEndpoint httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint" host="*"/>

	<!-- Automatically expand WAR files and EAR files -->
	<applicationManager autoExpand="true"/>

	<!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
	<ssl id="defaultSSLConfig" trustDefaultCerts="true"/>

	<library id="derbyLib">
		<fileset dir="${server.config.dir}/lib"/>
	</library>
	<dataSource jndiName="jdbc/derby">
		<jdbcDriver libraryRef="derbyLib"/>
		<properties.derby.embedded databaseName="memory:sample" createDatabase="create"/>
	</dataSource>
</server>
